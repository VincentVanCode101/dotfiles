# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock t coverage coveraghe
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# immer syncthing starten
exec --no-startup-id syncthing


# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status


bindsym XF86MonBrightnessUp exec --no-startup-id sudo brightnessctl set 5%+
bindsym XF86MonBrightnessDown exec --no-startup-id sudo brightnessctl set 5%-



# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal -e tmux

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher) with the zsh

bindsym $mod+d exec --no-startup-id zsh -c 'source ~/.zshrc && exec dmenu_run'


# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right


# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Ctrl+h split h

# split in vertical orientation
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
# bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

#set $ws1 "1"
#set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
#set $ws9 "9"
#set $ws10 "10"

#set $ws11 "11"
#set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
#set $ws19 "19"
#set $ws20 "20"


set $wsW "WhatsApp"
set $wsT "Telegramm"
set $wsK "KeePass"
set $wsM "Teams"
bindsym $mod+$mod2+t move container to workspace $wsT
bindsym $mod+$mod2+w move container to workspace $wsW
bindsym $mod+$mod2+k move container to workspace $wsK
bindsym $mod+$mod2+m move container to workspace $wsM


# switch to workspace
#bindsym $mod+1 workspace number $ws1
#bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
#bindsym $mod+9 workspace number $ws9
#bindsym $mod+0 workspace number $ws10

# Workspaces 11-20, with mod2
#bindsym $mod2+1 workspace number $ws11
#bindsym $mod2+2 workspace number $ws12
bindsym $mod2+3 workspace number $ws13
bindsym $mod2+4 workspace number $ws14
bindsym $mod2+5 workspace number $ws15
bindsym $mod2+6 workspace number $ws16
bindsym $mod2+7 workspace number $ws17
bindsym $mod2+8 workspace number $ws18
#bindsym $mod2+9 workspace number $ws19
#bindsym $mod2+0 workspace number $ws20


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod2+Shift+1 move container to workspace number $ws11
bindsym $mod2+Shift+2 move container to workspace number $ws12
bindsym $mod2+Shift+3 move container to workspace number $ws13
bindsym $mod2+Shift+4 move container to workspace number $ws14
bindsym $mod2+Shift+5 move container to workspace number $ws15
bindsym $mod2+Shift+6 move container to workspace number $ws16
bindsym $mod2+Shift+7 move container to workspace number $ws17
bindsym $mod2+Shift+8 move container to workspace number $ws18
bindsym $mod2+Shift+9 move container to workspace number $ws19
bindsym $mod2+Shift+0 move container to workspace number $ws20



# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the wiodiaeresisndow’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	status_command i3status
	position top
	output DP-3-3
	output DP-3-2
	output HDMI-1
	tray_output DP-3-3 
	font pango:DejaVu Sans Mono 10
	separator_symbol |
	}


bar {
	status_command i3status
	position top
	output primary
	#tray_output none
	font pango:DejaVu Sans Mono 11
	separator_symbol |
	}




# WHAT CHRISTOPH ADDED
# WHAT CHRISTOPH ADDED
# WHAT CHRISTOPH ADDED
# WHAT CHRISTOPH ADDED

# move the currently focused window to the scratchpad
#bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show

# enables i3-dmenu-desktop which only list apps with a .desktop file
bindsym $mod+Ctrl+d exec i3-dmenu-desktop


# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# font paggo: JetBrains Mono 13
 font pango:JetBrainsMono 9, DejaVu Sans Mono 10
#font pango:DejaVu Sans Mono, Terminus Bold Semi-Condensed 8
# font pango:Terminus 8px



####################################################################################
####################################################################################
# Screenshots
####################################################################################
####################################################################################

bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/Screenshots/Screenshot_$(date +'%Y-%m-%d_%H-%M-%S').jpg"

bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshots/Screenshot_$(date +'%Y-%m-%d_%H-%M-%S').jpg"

bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/Screenshots/Screenshot_$(date +'%Y-%m-%d_%H-%M-%S').jpg"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

####################################################################################
####################################################################################
# Border-Settings
####################################################################################
####################################################################################

# class of the borders            border          background      text            indicator       child_border
# the following line is a red border arround the focused window
#client.focused                    #ff0000         #ff9999         #000000         $coloratt       #ff0000

# the following line is a yellow border arround the focused window
# client.focused                    #ffff33         #000000         #ffff33         $coloratt       #ffff33

# client.focused_inactive         #333333         #000000         #ffff33         $coloratt       #000000
client.unfocused                #333333         #000000         #888888         $coloratt       #000000
client.focused_inactive                #333333         #000000         #888888         $coloratt       #000000
# client.urgent                   #2f343a         #900000         #ffffff         $coloratt       #900000
# client.placeholder              #000000         #000000         #ffffff         $coloratt       #0c0c0c

for_window [class=.*] border normal 2

####################################################################################
####################################################################################
# WORKSPACES
####################################################################################
####################################################################################

# Tastenkombination für Obsidian auf der linken Hälfte und Nautilus auf der rechten Hälfte von Workspace 1

bindsym $mod+Ctrl+1 exec --no-startup-id ~/little-projects/unix-shell-scripts/setUpi3WmWorkspaceNo1.sh

####################################################################################
####################################################################################
# SCRREN-LOCK & SUSPEND
####################################################################################
####################################################################################

# keybinding to lock screen

# SCREEN-LOCK
bindsym Ctrl+$mod+l exec "i3lock -i /home/christoph/Pictures/Wallpapers/FaustAndMephistoPPP.png"

# AUTO-LOCK
exec "xautolock -detectsleep -time 11 -locker \"i3lock -i /home/christoph/Pictures/Wallpapers/FaustAndMephistoPPP.png\""

# LOCK & SUSPEND
bindsym $mod+Ctrl+period exec --no-startup-id ~/little-projects/unix-shell-scripts/lockAndSuspend.sh;


####################################################################################
####################################################################################
# MY OWN KEYBINDINGS (EXEC APPLICATIONS) 
####################################################################################
####################################################################################

bindsym $mod+n exec --no-startup-id ~/.local/scripts/notes.sh "$HOME/personal/notes/secondBrain"
bindsym $mod+shift+n exec --no-startup-id ~/.local/scripts/notes.sh "$HOME/work/notes"
#exec_always --no-startup-id ~/.local/scripts/notes.sh "$HOME/personal/notes/secondBrain"
for_window [title=".*nvim /home/christoph/.*/notes.*"] floating enable
#for_window [title=".*nvim /home/christoph/.*/notes.*"] move to scratchpad

bindsym $mod+Ctrl+n exec --no-startup-id nautilus

bindsym $mod+Ctrl+g exec --no-startup-id google-chrome

bindsym $mod+Ctrl+f exec --no-startup-id firefox

bindsym $mod+Ctrl+c exec --no-startup-id gnome-control-center
bindsym $mod+Ctrl+b exec --no-startup-id blueman-manager


bindsym $mod+Ctrl+t exec --no-startup-id telegram-desktop; workspace $wsT
for_window [class="telegram-desktop"] move container to workspace $wsT

bindsym $mod+Ctrl+w exec --no-startup-id ~/little-projects/unix-shell-scripts/whatsapp; workspace $wsW
for_window [class="web.whatsapp.com"] move container to workspace $wsW

bindsym $mod+Ctrl+k exec --no-startup-id keepassxc; workspace $wsK
for_window [class="KeePassXC"] move container to workspace $wsK

bindsym $mod+Ctrl+m exec --no-startup-id ~/little-projects/unix-shell-scripts/teams; workspace $wsM
for_window [class="teams.microsoft.com"] move container to workspace $wsK

bindsym $mod+Ctrl+s exec --no-startup-id ~/.local/scripts/soundCloudSpotifyWorkspaceI3.sh

bindsym $mod+Ctrl+O exec --no-startup-id obsidian 

bindsym $mod+c exec zenity --calendar

####################################################################################
####################################################################################
# EXEC CLI APPLICATIONS
####################################################################################
####################################################################################

bindsym $mod+Ctrl+P exec --no-startup-id /home/christoph/projects/GoCrawlDeepl/run.sh

# bindsym $mod+Ctrl+P exec --no-startup-id /home/christoph/privat/telegram_clipboard_sender_repo/telegram-clipboard-sender/.venv/bin/python /home/christoph/privat/telegram_clipboard_sender_repo/telegram-clipboard-sender/telegram_clipboard_sender.py
# bindsym $mod+Ctrl+a exec --no-startup-id /home/christoph/privat/telegram_clipboard_sender_repo/telegram-clipboard-sender/.venv/bin/python /home/christoph/privat/telegram_clipboard_sender_repo/telegram-clipboard-sender/crawl_deepl.py clipboard-translation

#bindsym $mod+Ctrl+P exec --no-startup-id /home/christoph/other-little-applications/clipboard-syncing/.venv/bin/python /home/christoph/other-little-applications/clipboard-syncing/__main__.py set-clipboard

bindsym $mod+Ctrl+udiaeresis exec --no-startup-id /home/christoph/other-little-applications/clipboard-syncing/.venv/bin/python /home/christoph/other-little-applications/clipboard-syncing/__main__.py get-clipboard


####################################################################################
####################################################################################
# MOUSE-RELATED SETTINGS
####################################################################################
####################################################################################

# prevent mouse from jumping from screen to screen
mouse_warping none

# Touchpad enable tapping
exec_always --no-startup-id xinput --set-prop "SynPS/2 Synaptics TouchPad" 'libinput Tapping Enabled' 1
exec_always --no-startup-id xinput --set-prop "SynPS/2 Synaptics TouchPad" 'libinput Accel Speed' 1

# Adjust Mousspeed
exec_always --no-startup-id ~/little-projects/unix-shell-scripts/getMousIDAndAdjustSettings.sh 

set $mod2 Mod1

mode "mouse" {

	# set your three speeds here
# chris changed values.... would be better to change key-bindings but nah, takes too long
# so normal movement happens the fastest
	set $slow 50
	set $quick 200
	set $fast 10

	# Mouse movement (slow/fine-tuned) -- vim keybindings

	bindsym h exec xdotool mousemove_relative -- -$slow 0
	bindsym j exec xdotool mousemove_relative 0 $slow
	bindsym k exec xdotool mousemove_relative -- 0 -$slow
	bindsym l exec xdotool mousemove_relative $slow 0

	# Mouse movement (slow/fine-tuned) -- arrow keys

	bindsym Left exec xdotool mousemove_relative -- -$slow 0
	bindsym Down exec xdotool mousemove_relative 0 $slow
	bindsym Up exec xdotool mousemove_relative -- 0 -$slow
	bindsym Right exec xdotool mousemove_relative $slow 0

	# Mouse movement (quicker) -- vim keybindings

	bindsym Shift+h exec xdotool mousemove_relative -- -$quick 0
	bindsym Shift+j exec xdotool mousemove_relative 0 $quick
	bindsym Shift+k exec xdotool mousemove_relative -- 0 -$quick
	bindsym Shift+l exec xdotool mousemove_relative $quick 0

	# Mouse movement (quicker) -- arrow keys

	bindsym Shift+Left exec xdotool mousemove_relative -- -$quick 0
	bindsym Shift+Down exec xdotool mousemove_relative 0 $quick
	bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$quick
	bindsym Shift+Right exec xdotool mousemove_relative $quick 0

	# Mouse movement (fast) -- vim keybindings

	bindsym Shift+$mod2+h exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+$mod2+j exec xdotool mousemove_relative 0 $fast
	bindsym Shift+$mod2+k exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+$mod2+l exec xdotool mousemove_relative $fast 0

	# Mouse movement (fast) -- arrow keys

	bindsym Shift+$mod2+Left exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+$mod2+Down exec xdotool mousemove_relative 0 $fast
	bindsym Shift+$mod2+Up exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+$mod2+Right exec xdotool mousemove_relative $fast 0

	# Left Click
	bindsym f exec xdotool click 1

	# Middle Click
	bindsym d exec xdotool click 2

	# Right Click
	bindsym s exec xdotool click 3

	# Left Click-and-drag
	bindsym Shift+f exec xdotool mousedown 1

	# Middle Click-and-drag 
	bindsym Shift+d exec xdotool mousedown 2

	# Right Click-and-drag
	bindsym Shift+s exec xdotool mousedown 3

	# Left Drag release
	bindsym $mod2+f exec xdotool mouseup 1

	# Middle Drag release
	bindsym $mod2+d exec xdotool mouseup 2

	# Right Drag release
	bindsym $mod2+s exec xdotool mouseup 3


	# return to normal keybindings -- IMPORTANT!!

	bindsym Escape mode "default"
}

bindsym $mod+m mode "mouse"


####################################################################################
####################################################################################
# GAPS-MODE
####################################################################################
####################################################################################


set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}



####################################################################################
####################################################################################
# THE END
####################################################################################
####################################################################################
